---
const { upcomingRace } = Astro.props;

const previewTextBasedOnRaceDate = () => {
  const raceDate = new Date(upcomingRace.date.fullEndDate);
  const today = new Date();

  const difference = raceDate.getTime() - today.getTime();

  const totalDays = Math.ceil(difference / (1000 * 3600 * 24));

  const isRaceOrTest = () => {
    if (upcomingRace.event.eventTitle.includes('TESTING')) {
      return 'test';
    }

    return 'race';
  };

  const objectLiteral = (input: number) =>
    ({
      [`${input === 0}`]: 'Vandaag',
      [`${input <= 4 && input > 0}`]: 'Dit weekend',
      [`${input <= 7 && input > 4}`]: 'Deze week',
      [`${input > 7}`]: `Komende ${isRaceOrTest()}`,
    }.true);

  return objectLiteral(totalDays) || 'Komende race';
};
---

<div class="dark:text-white">
  <div class="mb-2">
    <h2 class="text-2xl font-semibold">
      {previewTextBasedOnRaceDate()}:{' '}
      <span class="font-bold">üèÜ {upcomingRace.event.eventTitle}</span>
    </h2>
    <h2 class="text-2xl font-semibold">
      {upcomingRace.event.eventPlace}
      {upcomingRace.event.flagEmoji}
    </h2>
  </div>

  <div class="flex items-baseline gap-2">
    <h3 class="text-xl font-bold">
      {
        upcomingRace.raceRoundNumber === '0'
          ? 'Pre-season test'
          : `Ronde: ${upcomingRace.raceRoundNumber}`
      }:
    </h3>
    <p class="font-semibold">
      {upcomingRace.date.startDate} tot en met {upcomingRace.date.endDate}
      {upcomingRace.date.month}
    </p>
  </div>
</div>
